// SHEET FUNCTION
const styleMain = `@import url('https://fonts.googleapis.com/css2?family=Lexend+Deca:wght@100;200;300;400;500;600;700;800;900&family=Nunito:ital,wght@0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;0,1000;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900;1,1000&display=swap');body {font-family: 'Lexend Deca'}.backdrop {display: block;position: fixed;z-index: 1;left: 0;top: 0;width: 100%;height: 100%;overflow: auto;background-color: rgba(0, 0, 0, 0.5);}.backdrop2 {display: block;position: fixed;z-index: 1;left: 0;top: 0;width: 100%;height: 100%;overflow: auto;}.popup-content {margin: 10% auto;padding: 20px;width: 80%;}.animation{-webkit-animation-duration:300ms;animation-duration:300ms;-webkit-animation-duration:var(--animate-duration);animation-duration:var(--animate-duration);-webkit-animation-fill-mode:both;animation-fill-mode:both}@-webkit-keyframes fadeInUp{0%{opacity:0;-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}to{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}}@keyframes fadeInUp{0%{opacity:0;-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}to{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}}.animation-fadeInUp{-webkit-animation-name:fadeInUp;animation-name:fadeInUp}@-webkit-keyframes fadeInDown{0%{opacity:0;-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}to{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}}@keyframes fadeInDown{0%{opacity:0;-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}to{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}}.animation-fadeInDown{-webkit-animation-name:fadeInDown;animation-name:fadeInDown}@-webkit-keyframes fadeOutDown{0%{opacity:1}to{opacity:0;-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}}@keyframes fadeOutDown{0%{opacity:1}to{opacity:0;-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}}.animation-fadeOutDown{-webkit-animation-name:fadeOutDown;animation-name:fadeOutDown}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.animation-fadeIn{-webkit-animation-name:fadeIn;animation-name:fadeIn}@-webkit-keyframes fadeOut{0%{opacity:1}to{opacity:0}}@keyframes fadeOut{0%{opacity:1}to{opacity:0}}.animation-fadeOut{-webkit-animation-name:fadeOut;animation-name:fadeOut}@-webkit-keyframes fadeOutUp{0%{opacity:1}to{opacity:0;-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}}@keyframes fadeOutUp{0%{opacity:1}to{opacity:0;-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}}.animation-fadeOutUp{-webkit-animation-name:fadeOutUp;animation-name:fadeOutUp}.fixed-top{position:fixed;top:0;right:0;left:0;z-index:1030}.fixed-bottom{position:fixed;right:0;bottom:0;left:0;z-index:1030}.sticky-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}.sticky-bottom{position:-webkit-sticky;position:sticky;bottom:0;z-index:1020}@media (min-width:576px){.sticky-sm-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}.sticky-sm-bottom{position:-webkit-sticky;position:sticky;bottom:0;z-index:1020}}@media (min-width:768px){.sticky-md-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}.sticky-md-bottom{position:-webkit-sticky;position:sticky;bottom:0;z-index:1020}}@media (min-width:992px){.sticky-lg-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}.sticky-lg-bottom{position:-webkit-sticky;position:sticky;bottom:0;z-index:1020}}@media (min-width:1200px){.sticky-xl-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}.sticky-xl-bottom{position:-webkit-sticky;position:sticky;bottom:0;z-index:1020}}@media (min-width:1400px){.sticky-xxl-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}.sticky-xxl-bottom{position:-webkit-sticky;position:sticky;bottom:0;z-index:1020}}.hstack{display:flex;flex-direction:row;align-items:center;align-self:stretch}.d-none{display:none!important}.info {padding: 10px;border-radius: 15px;color: white;font-size: 12px;margin: 10px;}.info.info-primary {--gs-info-bg-primary: rgba(35, 0, 236, 0.795);background-color: var(--gs-info-bg-primary)!important;}.info.info-success {--gs-info-bg-success: rgba(0, 196, 121, 0.863);background-color: var(--gs-info-bg-success) !important}.info.info-warning {--gs-info-bg-warning: rgba(240, 236, 0, 0.863);background-color: var(--gs-info-bg-warning) !important;}.info.info-danger {--gs-info-bg-danger: rgba(236, 8, 0, 0.795);background-color: var(--gs-info-bg-danger) !important;}`

const MainStyleElement = document.createElement('style')
MainStyleElement.textContent = styleMain
document.head.append(MainStyleElement)
let stateConfirmBack = false
let stateGlobalBack = []
const SheetElement = document.createElement('div')
const bacakdrop = document.createElement('div')
let stateSheet = false
class Sheet {
    static open(content = '<h1>Sheet Content</h1>', styles = {}, target = document.body) {
        bacakdrop.className = 'backdrop animation animation-fadeIn'
        SheetElement.className = 'fixed-bottom animation animation-fadeInUp'
        for(const styleKey in styles) {
            SheetElement.style[styleKey] = styles[styleKey]
        }
        SheetElement.innerHTML = content
        document.body.append(bacakdrop)
        target.append(SheetElement)
        stateSheet = true
        stateGlobalBack.push('Sheet.close(forclose)')
        history.pushState('Sheet1', '', location.href)
    }
    static close() {
        SheetElement.classList.replace('animation-fadeInUp', 'animation-fadeOutDown')
        bacakdrop.classList.replace('animation-fadeIn', 'animation-fadeOut')
        setTimeout(() => {
            SheetElement.remove()
            bacakdrop.remove()
        }, 300)
        stateSheet = false
    }
}

// END OF SHEET FUNCTION
// Modal Function
let stateInShettModal = false
let stateArrayInSheetModal = []
let stateModal = false
class Modal {
    static open(content = '', styles = {}, inSheet = false, target = document.body,) {
        const ModalElement = document.createElement('modal')
        const modalContent = document.createElement('div')
        ModalElement.className = 'backdrop animation animation-fadeIn'
        modalContent.className = 'popup-content'
        modalContent.innerHTML = content
        stateInShettModal = false
        if(inSheet) {
            stateInShettModal = true
            stateArrayInSheetModal.push(true)
            bacakdrop.classList.add('d-none')
            SheetElement.style.zIndex = '0'
        }
        ModalElement.innerHTML = ''
        ModalElement.append(modalContent)
        for(const styleKey in styles) {
            modalContent.style[styleKey] = styles[styleKey]
        }
        target.append(ModalElement)
        history.pushState('modalOpen', '', location.href)
        stateGlobalBack.push('Modal.close(forclose)')
        stateModal = true
    }
    static close(index) {
        // console.log(index)
        const ModalElements = document.querySelectorAll('modal')
        ModalElements[index].classList.replace('animation-fadeIn', 'animation-fadeOut')
        let urutan = parseInt(index)+parseInt(1)
        setTimeout(() => {
            ModalElements[index].remove()
        }, 300)
        if(stateInShettModal) {
            if(index !== 0) return
            stateInShettModal = false
            bacakdrop.classList.remove('d-none')
            SheetElement.style.zIndex = 9999   
        }
        stateModal = false
    }
}
// ENd OF MODAL FYNCTION

window.addEventListener('popstate', (e) => {
    if(stateGlobalBack.length != 0) {
        let forclose = stateGlobalBack.length-1
        if(stateArrayInSheetModal.length != 0) forclose = stateArrayInSheetModal.length - 1;stateArrayInSheetModal.splice(stateArrayInSheetModal.length - 1, 1)
        eval(stateGlobalBack[stateGlobalBack.length-1])
        stateGlobalBack.splice(stateGlobalBack.length-1, 1)
        return
    }
})


const Toast = {
    open:(text = '', dur = 1000, type = 'info-primary', target = document.body) => {
        const ToastElement = document.createElement('div')
        ToastElement.className = `fixed-top info ${type} m-3 animation animation-fadeInDown`
        ToastElement.innerHTML = text
        target.append(ToastElement)
        const removeToast = () => {
            ToastElement.classList.replace('animation-fadeInDown', 'animation-fadeOutUp')
            setTimeout(() => {
                ToastElement.remove()
            }, 300);
        }
        let timeoutID = setTimeout(() => {
            removeToast()
        }, dur);
        ToastElement.onclick = () => {
            clearTimeout(timeoutID)
            removeToast()
        }
    }
}

function pw() {
   console.log("provided by danizevaro.xyz")
   console.log("and danizevaro.my.id")
}
pw()
